XMLHttpRequest
fetch()
jQuery Ajax
axios
                             Style Binding

- Style binding is a technique used in web applications to bind css style attributes to any element. [React JSX element]

Syntax: HTML
        <input type="text"  style="border:none" id="User">

Syntax: JavaScript
         document.getElementById("User").style.cssAttribute = value;

Syntax: React
         <input type="text"  style={ { cssAttribute: 'value' } } />

- Style attributes are configured using "camelCase".

        background-color        => backgroundColor
        font-size                => fontSize
        text-align                => textAlign
        color                => color
Ex:
  <input type="text"  style={ {border:'none', backgroundColor:'yellow' } } />

CSS Rules:
- Priority of selectors
    1st        id
    2nd        class
    3rd        type
- Inline, external and embedded
    1st         inline
    2nd        embedded
    3rd         external file
- Inheritance
    inherit
    initial
    unset

Ex:
        const [styleObj, setStyleObj] = useState({ border:'', textAlign:'' });

        setStyleObj( {border:'none', textAlign:'center'} )
       
        <h2  style={styleObj}> </h2>

style-demo.jsx

import { useEffect, useState } from "react"


export function StyleDemo(){

    const [errorStyle, setErrorStyle] = useState({border:''});

    function handleNameChange(e){
         console.log(e.target.value);
         
         if(e.target.value==""){
             setErrorStyle({
                border:'2px solid red',
                outline:'none'
             })
         } else {
            setErrorStyle({
                border: '2px solid green',
                outline: 'none'
            })
         }
    }
   

    function handleNameFocus(){
        setErrorStyle({
            border:'none',
            outline: 'none'
        })
    }


    return(
        <div className="container-fluid">
            <h3 >Register</h3>
            <dl>
                <dt>User Name</dt>
                <dd>
                    <input type="text" onFocus={handleNameFocus} style={errorStyle} onChange={handleNameChange} placeholder="Name required" />
                </dd>
            </dl>
        </div>
    )
}

                           Class Binding
- A css class comprises of set of attributes and functions, which you can change dynamically.
- React uses "className" property to bind and css class dynamically.
- className is a string that splits multiple classes using blank space.

Syntax:
        <input type="text"  className={ 'class1 class2 class3..' } />

Ex:
    const [btnClass, setbtnClass] = useState(' ');

    setbtnClass('btn btn-primary w-100');

    <button  className={btnClass}> Login </button>

class-binding.jsx

import { useState } from "react"

export function ClassBinding(){

    const [theme, setTheme] = useState('w-25');
    const [btnClass, setBtnClass] = useState('btn btn-dark w-100');

    function handleThemeChange(e){
        if(e.target.checked){
            setTheme('w-25 bg-dark text-white');
            setBtnClass('btn btn-light w-100');
        } else {
            setTheme('w-25');
            setBtnClass('btn btn-dark w-100');
        }
    }

    return(
        <div className="container-fluid d-flex justify-content-center mt-4">
           
            <form className={theme}>
                <h3 className="bi bi-person">User Login</h3>
                <div className="form-switch">
                <input onChange={handleThemeChange} type="checkbox" className="form-check-input"/> <label>Dark Theme</label>
                </div>
                <dl>
                    <dt>User Id</dt>
                    <dd><input type="text"  className="form-control"/></dd>
                    <dt>Password</dt>
                    <dd><input type="password" className="form-control" /></dd>
                </dl>
                <button className={btnClass}>Login</button>
            </form>
        </div>
    )
}

Ex:
class-binding.jsx

import { useEffect, useState } from "react"

export function ClassBinding(){

   
    const [sortClass, setSortClass] = useState('bi bi-sort-alpha-down btn btn-primary');
    const [themeColor, setThemeColor] = useState('dark')

    function handleSortClick(){
        setSortClass((sortClass==='bi bi-sort-alpha-down btn btn-primary')?'bi bi-sort-alpha-up btn btn-warning':'bi bi-sort-alpha-down btn btn-primary');
    }

    return(
        <div className="container-fluid d-flex justify-content-center mt-4">

            <div style={{padding:'50px'}} className={(themeColor==='dark')?'bg-dark':'bg-danger'}>
                <h2>Theme Color</h2>
                <button onClick={handleSortClick} className={sortClass}></button>
            </div>
        </div>
    )
}